## Why I do not test private member function
First of all, according to googletest doc, "If you change your software’s internal implementation, your tests should not break as long as the change is not observable by users. Therefore, per the black-box testing principle, most of the time you should test your code through its public interfaces." and "If you still find yourself needing to test internal implementation code, consider if there’s a better design. The desire to test internal implementation is often a sign that the class is doing too much. Consider extracting an implementation class, and testing it. Then use that implementation class in the original class." Also, I feel like doing test on private member function are adding lots of unnecessary test, which probably be a waste of time since I am testing code that could never be used in certain ways. It would be more time saved to just test public interface, since they are what actually being used, and it require more testing energy.